archiveToolkit.checksum.algorithm=md5

content.transformer.Pdf2Pdfa.priority=30
content.transformer.Pdf2Pdfa.extensions.pdf.pdfa.supported=true
content.transformer.Pdf2Pdfa.extensions.pdf.pdfa.priority=30
content.transformer.Pdf2Pdfa.extensions.pdf.pdfa.maxSourceSizeKBytes.use.index=9999


pdfa.filelocations=${java.io.tmpdir}

pdfa.definition.file=${pdfa.filelocations}/gs/PDFA_def.ps
pdfa.iccprofile.file=${pdfa.filelocations}/gs/sRGB_IEC61966-2.1.icc
#Audit settings
#audit.alfresco-archive-toolkit.enabled=false

#Specify pdf2archive path. Ghostscript needs to be globally available
pdf2archive.exe=pdf2archive
#Add the clean metadata flag by default to remove all extracted standard metadata from the pdf to be written as xmp-metadata. This often cause errors when trying to validate files according to pdf/a-1 standard.
pdf2archive.extraflags=--gspath=${gs.exe}

#Path to excel-to-html.sh script
excelToHtml.exe=/opt/alfresco/excel2html/excel-to-html.sh
#The path to where the shell scripts and jar file exists
excelToHtml.path=/opt/alfresco/excel2html
#Path to LibreOffice binary
excel.soffice=${ooo.exe}
#Temporary directory, used for conversions and LibreOffice temporary files
excel.libreoffice.user=${java.io.tmpdir}
#Transformer settings
content.transformer.ExcelToHtml.priority=30
content.transformer.ExcelToHtml.extensions.xls.html.supported=true
content.transformer.ExcelToHtml.extensions.xls.html.priority=20
content.transformer.ExcelToHtml.extensions.xls.html.maxSourceSizeKBytes.use.index=9999
content.transformer.ExcelToHtml.extensions.xlsx.html.supported=true
content.transformer.ExcelToHtml.extensions.xlsx.html.priority=20
content.transformer.ExcelToHtml.extensions.xlsx.html.maxSourceSizeKBytes.use.index=9999